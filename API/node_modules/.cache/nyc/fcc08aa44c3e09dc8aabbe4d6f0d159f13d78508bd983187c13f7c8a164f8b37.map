{"version":3,"sources":["users.js"],"names":["userRoutes","express","Router","notImplemented","req","res","end","route","get","passport","authenticate","session","authCtrl","authorizeAdmin","userCtrl","getAll","post","create","authorizeSelfAndAdmin","getById","put","updateById","removeById","listGroups","listEvents","listNotifications","setEventVisibility","calendar"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,UAAU,GAAGC,oBAAQC,MAAR,EAAnB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,GAAJ,CAAQ,qBAAR,CAAd;AAAA,CAAvB;;AAGAN,UAAU,CAACO,KAAX,CAAiB,GAAjB,EACKC,GADL,CAEQC,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAFR,EAGQC,iBAASC,cAHjB,EAIQC,kBAASC,MAJjB,EAMKC,IANL,CAMUF,kBAASG,MANnB;AAQAjB,UAAU,CAACO,KAAX,CAAiB,MAAjB,EACKC,GADL,CAEQC,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAFR,EAGQC,iBAASM,qBAHjB,EAIQJ,kBAASK,OAJjB,EAMKC,GANL,CAOQX,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAPR,EAQQC,iBAASM,qBARjB,EASQJ,kBAASO,UATjB,YAYQZ,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAZR,EAaQC,iBAASM,qBAbjB,EAcQJ,kBAASQ,UAdjB;AAiBAtB,UAAU,CAACO,KAAX,CAAiB,aAAjB,EACKC,GADL,CAEQC,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAFR,EAGQC,iBAASM,qBAHjB,EAIQJ,kBAASS,UAJjB;AAOAvB,UAAU,CAACO,KAAX,CAAiB,aAAjB,EACKC,GADL,CAEQC,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAFR,EAGQC,iBAASM,qBAHjB,EAIQJ,kBAASU,UAJjB;AAOAxB,UAAU,CAACO,KAAX,CAAiB,oBAAjB,EACKC,GADL,CAEQC,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAFR,EAGQC,iBAASM,qBAHjB,EAIQJ,kBAASW,iBAJjB;AAOAzB,UAAU,CAACO,KAAX,CAAiB,uBAAjB,EACKS,IADL,CAEQP,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAFR,EAGQC,iBAASM,qBAHjB,EAIQJ,kBAASY,kBAJjB;AAOA1B,UAAU,CAACO,KAAX,CAAiB,eAAjB,EACKC,GADL,CAEQC,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAFR,EAGQG,kBAASa,QAHjB;eAMe3B,U","sourceRoot":"/home/erwan/Desktop/ETNA/MOBI/mobi_appli/API/src/routes","sourcesContent":["import express  from 'express';\nimport passport from 'passport';\nimport userCtrl from '../controllers/users';\nimport authCtrl from '../controllers/auth';\n\nconst userRoutes = express.Router();\n\nconst notImplemented = (req, res) => res.end('Not Implemented Yet');\n\n\nuserRoutes.route('/')\n    .get(\n        passport.authenticate('jwt', { session: false }),\n        authCtrl.authorizeAdmin,\n        userCtrl.getAll\n    )\n    .post(userCtrl.create);\n\nuserRoutes.route('/:id')\n    .get(\n        passport.authenticate('jwt', { session: false }),\n        authCtrl.authorizeSelfAndAdmin,\n        userCtrl.getById\n    )\n    .put(\n        passport.authenticate('jwt', { session: false }),\n        authCtrl.authorizeSelfAndAdmin,\n        userCtrl.updateById\n    )\n    .delete(\n        passport.authenticate('jwt', { session: false }),\n        authCtrl.authorizeSelfAndAdmin,\n        userCtrl.removeById\n    );\n\nuserRoutes.route('/:id/groups')\n    .get(\n        passport.authenticate('jwt', { session: false }),\n        authCtrl.authorizeSelfAndAdmin,\n        userCtrl.listGroups\n    );\n\nuserRoutes.route('/:id/events')\n    .get(\n        passport.authenticate('jwt', { session: false }),\n        authCtrl.authorizeSelfAndAdmin,\n        userCtrl.listEvents\n    );\n\nuserRoutes.route('/:id/notifications')\n    .get(\n        passport.authenticate('jwt', { session: false }),\n        authCtrl.authorizeSelfAndAdmin,\n        userCtrl.listNotifications\n    );\n\nuserRoutes.route('/:id/events/:event_id')\n    .post(\n        passport.authenticate('jwt', { session: false }),\n        authCtrl.authorizeSelfAndAdmin,\n        userCtrl.setEventVisibility\n    );\n\nuserRoutes.route('/:id/calendar')\n    .get(\n        passport.authenticate('jwt', { session: false }),\n        userCtrl.calendar\n    );\n\nexport default userRoutes;\n"]}