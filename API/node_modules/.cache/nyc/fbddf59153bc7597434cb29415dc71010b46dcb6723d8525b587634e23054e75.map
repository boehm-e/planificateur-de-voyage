{"version":3,"sources":["events.js"],"names":["joiSchema","Joi","object","keys","name","string","min","required","start","date","iso","end","getAll","req","res","next","eventService","events","log","error","json","create","body","Date","user_id","user","id","event","addEventToReq","params","getById","code","message","warn","status","_","inviteUsers","atendeesEmails","event_id","Promise","all","map","user_email","inviteUserByEmail","respondToInvitation","parseInt","accept","atendees","u","includes","find","invitation_id","cancel"],"mappings":"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","sourceRoot":"/home/erwan/Desktop/ETNA/MOBI/mobi_appli/API/src/controllers","sourcesContent":["import Joi          from '@hapi/joi';\nimport eventService from '../services/events';\n\nconst joiSchema = Joi.object().keys({\n    name: Joi.string().min(3).required(),\n    start: Joi.date().iso().required(),\n    end: Joi.date().iso().required()\n});\n\nconst getAll = async (req, res, next) => {\n    try {\n        var events = await eventService.getAll();\n    } catch (err) {\n        req.log.error(err);\n        return next(err);\n    }\n\n    return res.json(events);\n};\n\nconst create = async (req, res, next) => {\n    const body = {\n        name: req.body.name,\n        start: new Date(req.body.start),\n        end: new Date(req.body.end),\n        user_id: req.user.id\n    };\n\n    try {\n        var event = await eventService.create(body);\n    } catch (err) {\n        req.log.error(err);\n        return next(err);\n    }\n\n    return res.json(event);\n};\n\nconst addEventToReq = async (req, res, next) => {\n    const id = req.params.id;\n\n    try {\n        var event = await eventService.getById(id);\n    } catch (err) {\n        /* istanbul ignore else  */\n        if (err.name == 'EVENT_NOT_FOUND') {\n            const error = {\n                code: 404,\n                message: `[Not Found]\\nEvent with id ${id} not found.`\n            };\n\n            req.log.warn(error);\n            return res.status(404).json(error);\n        } else {\n            req.log.error(err);\n            return next(err);\n        }\n    }\n\n    req.event = event;\n\n    return next();\n};\n\nconst getById = async (req, res, next) => {\n    if (!req.event) {\n        await addEventToReq(req, res, _ => getById(req, res));\n    }\n\n    return res.json(req.event);\n};\n\nconst inviteUsers = async (req, res, next) => {\n    const atendeesEmails = req.body;\n    const event_id = req.params.id;\n\n    try {\n        await Promise.all(\n            atendeesEmails.map(user_email => eventService.inviteUserByEmail(event_id, user_email))\n        );\n\n        var event = await eventService.getById(event_id);\n    } catch (err) {\n        req.log.error(err);\n        return next(err);\n    }\n\n    return res.json(event);\n};\n\nconst respondToInvitation  = async (req, res, next) => {\n    const event_id = parseInt(req.params.id);\n    const user_id = parseInt(req.params.user_id);\n    const accept = req.body.accept;\n\n    try {\n        var event = await eventService.getById(event_id);\n\n        if (!event.atendees.map(u => u.id).includes(user_id)) {\n            return res.status(404).end(`No invitation to event number ${event.id} for user ${user_id}`);\n        }\n\n        const { invitation_id } = event.atendees.find(u => u.id == user_id);\n        await eventService.respondToInvitation(invitation_id, accept);\n\n        event = await eventService.getById(event_id);\n    } catch (err) {\n        req.log.error(err);\n        return next(err);\n    }\n\n    return res.json(event);\n};\n\nconst cancel = async (req, res, next) => {\n    const event_id = req.params.id;\n\n    try {\n        await eventService.cancel(event_id);\n        var event = await eventService.getById(event_id);\n    } catch (err) {\n        req.log.error(err);\n        return next(err);\n    }\n\n    return res.json(event);\n};\n\nexport default {getAll, create, addEventToReq, getById, inviteUsers, respondToInvitation, cancel, joiSchema};\n"]}