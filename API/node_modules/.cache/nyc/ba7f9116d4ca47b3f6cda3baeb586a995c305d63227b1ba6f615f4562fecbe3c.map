{"version":3,"sources":["events.js"],"names":["eventsRoutes","express","Router","notImplemented","req","res","end","route","get","passport","authenticate","session","authCtrl","authorizeAdmin","eventsCtrl","getAll","post","utils","validateReqBody","joiSchema","create","addEventToReq","authorizeFnList","event","user","id","atendees","map","u","includes","getById","inviteUsers","cancel","put","params","user_id","respondToInvitation"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,YAAY,GAAGC,oBAAQC,MAAR,EAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,GAAJ,CAAQ,qBAAR,CAAd;AAAA,CAAvB;;AAGAN,YAAY,CAACO,KAAb,CAAmB,GAAnB,EACKC,GADL,CAEQC,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAFR,EAGQC,iBAASC,cAHjB,EAIQC,mBAAWC,MAJnB,EAMKC,IANL,CAOQP,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAPR,EAQQM,kBAAMC,eAAN,CAAsBJ,mBAAWK,SAAjC,CARR,EASQL,mBAAWM,MATnB;AAYApB,YAAY,CAACO,KAAb,CAAmB,MAAnB,EACKC,GADL,CAEQC,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAFR,EAGQG,mBAAWO,aAHnB,EAIQT,iBAASU,eAAT,CAAyB,CACrB,UAAAlB,GAAG;AAAA,SAAI,CAACA,GAAG,CAACmB,KAAJ,CAAUC,IAAV,CAAeC,EAAhB,6CAAuBrB,GAAG,CAACmB,KAAJ,CAAUG,QAAV,CAAmBC,GAAnB,CAAuB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACH,EAAN;AAAA,GAAxB,CAAvB,GAA0DI,QAA1D,CAAmEzB,GAAG,CAACoB,IAAJ,CAASC,EAA5E,CAAJ;AAAA,CADkB,CAAzB,CAJR,EAOQX,mBAAWgB,OAPnB,EASKd,IATL,CAUQP,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAVR,EAWQG,mBAAWO,aAXnB,EAYQT,iBAASU,eAAT,CAAyB,CACrB,UAAAlB,GAAG;AAAA,SAAIA,GAAG,CAACmB,KAAJ,CAAUC,IAAV,CAAeC,EAAf,IAAqBrB,GAAG,CAACoB,IAAJ,CAASC,EAAlC;AAAA,CADkB,CAAzB,CAZR,EAeQX,mBAAWiB,WAfnB,YAkBQtB,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAlBR,EAmBQG,mBAAWO,aAnBnB,EAoBQT,iBAASU,eAAT,CAAyB,CACrB,UAAAlB,GAAG;AAAA,SAAIA,GAAG,CAACmB,KAAJ,CAAUC,IAAV,CAAeC,EAAf,IAAqBrB,GAAG,CAACoB,IAAJ,CAASC,EAAlC;AAAA,CADkB,CAAzB,CApBR,EAuBQX,mBAAWkB,MAvBnB;AA0BAhC,YAAY,CAACO,KAAb,CAAmB,eAAnB,EACK0B,GADL,CAEQxB,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CAFR,EAGQC,iBAASU,eAAT,CAAyB,CACrB,UAAAlB,GAAG;AAAA,SAAIA,GAAG,CAAC8B,MAAJ,CAAWC,OAAX,IAAsB/B,GAAG,CAACoB,IAAJ,CAASC,EAAnC;AAAA,CADkB,CAAzB,CAHR,EAMQX,mBAAWsB,mBANnB,YASQ3B,qBAASC,YAAT,CAAsB,KAAtB,EAA6B;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAA7B,CATR,EAUQR,cAVR;eAaeH,Y","sourceRoot":"/home/erwan/Desktop/ETNA/MOBI/mobi_appli/API/src/routes","sourcesContent":["import express       from 'express';\nimport passport      from 'passport';\nimport utils         from '../helpers/utils';\nimport authCtrl      from '../controllers/auth';\nimport eventsCtrl    from '../controllers/events';\nimport eventsService from '../services/events';\n\nconst eventsRoutes = express.Router();\n\nconst notImplemented = (req, res) => res.end('Not Implemented Yet');\n\n\neventsRoutes.route('/')\n    .get(\n        passport.authenticate('jwt', { session: false }),\n        authCtrl.authorizeAdmin,\n        eventsCtrl.getAll\n    )\n    .post(\n        passport.authenticate('jwt', { session: false }),\n        utils.validateReqBody(eventsCtrl.joiSchema),\n        eventsCtrl.create\n    );\n\neventsRoutes.route('/:id')\n    .get(\n        passport.authenticate('jwt', { session: false }),\n        eventsCtrl.addEventToReq,\n        authCtrl.authorizeFnList([\n            req => [req.event.user.id, ...req.event.atendees.map(u => u.id)].includes(req.user.id)\n        ]),\n        eventsCtrl.getById\n    )\n    .post(\n        passport.authenticate('jwt', { session: false }),\n        eventsCtrl.addEventToReq,\n        authCtrl.authorizeFnList([\n            req => req.event.user.id == req.user.id\n        ]),\n        eventsCtrl.inviteUsers\n    )\n    .delete(\n        passport.authenticate('jwt', { session: false }),\n        eventsCtrl.addEventToReq,\n        authCtrl.authorizeFnList([\n            req => req.event.user.id == req.user.id\n        ]),\n        eventsCtrl.cancel\n    );\n\neventsRoutes.route('/:id/:user_id')\n    .put(\n        passport.authenticate('jwt', { session: false }),\n        authCtrl.authorizeFnList([\n            req => req.params.user_id == req.user.id\n        ]),\n        eventsCtrl.respondToInvitation\n    )\n    .delete(\n        passport.authenticate('jwt', { session: false }),\n        notImplemented\n    );\n\nexport default eventsRoutes;\n"]}