{"version":3,"sources":["groups.js"],"names":["getAll","Group","create","name","description","user_id","getById","group_id","inviteUserById","GroupMember","inviteUserByEmail","user_email","User","getByEmail","user","id","respondToInvitation","accepted","save","patch","deleteGroup","deleted"],"mappings":"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","sourceRoot":"/home/erwan/Desktop/ETNA/MOBI/mobi_appli/API/src/services","sourcesContent":["import Group        from '../models/group';\nimport User         from '../models/user';\nimport GroupMember  from '../models/groupMember';\n\nconst getAll = async () => await Group.getAll();\n\nconst create = async ({name, description, user_id}) => await Group.create({ name, description, user_id });\n\nconst getById = async (group_id) => await Group.getById(group_id);\n\nconst inviteUserById = async (group_id, user_id) => await GroupMember.create({group_id, user_id});\n\nconst inviteUserByEmail = async (group_id, user_email) => {\n    const user = await User.getByEmail(user_email);\n    return await inviteUserById(group_id, user.id);\n};\n\nconst respondToInvitation = async (id, accepted) => await new GroupMember({id}).save({accepted}, {patch: true});\n\nconst deleteGroup = async (id) => await new Group({id}).save({deleted: true}, {patch: true});\n\nexport default {getById, create, getAll, inviteUserById, inviteUserByEmail, respondToInvitation, deleteGroup};\n"]}